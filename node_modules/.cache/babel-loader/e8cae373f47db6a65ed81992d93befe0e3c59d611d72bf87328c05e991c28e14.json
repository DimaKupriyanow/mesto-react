{"ast":null,"code":"class Api {\n  constructor({\n    baseUrl,\n    headers\n  }) {\n    this._url = baseUrl;\n    this._headers = headers;\n  }\n  _getResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getUserInfo() {\n    return fetch(`${this._url}users/me`, {\n      headers: this._headers\n    }).then(this._getResponse);\n  }\n  getInitialCards() {\n    return fetch(`${this._url}cards`, {\n      headers: this._headers\n    }).then(this._getResponse);\n  }\n  deleteCard(id) {\n    return fetch(`${this._url}cards/${id}`, {\n      headers: this._headers,\n      method: \"DELETE\"\n    }).then(this._getResponse);\n  }\n  createCardData(data) {\n    return fetch(`${this._url}cards`, {\n      headers: this._headers,\n      method: \"POST\",\n      body: JSON.stringify({\n        name: data.inputNameCard,\n        link: data.inputLink\n      })\n    }).then(this._getResponse);\n  }\n  changeProfile(data) {\n    return fetch(`${this._url}users/me`, {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify({\n        name: data.inputName,\n        about: data.inputInfo\n      })\n    }).then(this._getResponse);\n  }\n  likeCard(id) {\n    return fetch(`${this._url}cards/${id}/likes`, {\n      headers: this._headers,\n      method: \"PUT\"\n    }).then(this._getResponse);\n  }\n  deleteLikesCard(id) {\n    return fetch(`${this._url}cards/${id}/likes`, {\n      headers: this._headers,\n      method: \"DELETE\"\n    }).then(this._getResponse);\n  }\n  changeAvatar(data) {\n    return fetch(`${this._url}users/me/avatar`, {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify({\n        avatar: data.inputLinkAvatar\n      })\n    }).then(this._getResponse);\n  }\n}\nconst apiConfig = {\n  url: \"https://mesto.nomoreparties.co/v1/cohort-76/\",\n  headers: {\n    authorization: \"487361ea-3659-4f38-9ffe-1c80ddb5a2d6\",\n    \"Content-Type\": \"application/json\"\n  }\n};\nexport const newApi = new Api(apiConfig);\nexport default Api;","map":{"version":3,"names":["Api","constructor","baseUrl","headers","_url","_headers","_getResponse","res","ok","json","Promise","reject","status","getUserInfo","fetch","then","getInitialCards","deleteCard","id","method","createCardData","data","body","JSON","stringify","name","inputNameCard","link","inputLink","changeProfile","inputName","about","inputInfo","likeCard","deleteLikesCard","changeAvatar","avatar","inputLinkAvatar","apiConfig","url","authorization","newApi"],"sources":["/Users/dimakupriyanow/mesto-react/src/utils/api.js"],"sourcesContent":["\n class Api {\n    constructor({ baseUrl, headers }) {\n      this._url = baseUrl;\n      this._headers = headers;\n    }\n  \n    _getResponse(res) {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  \n    getUserInfo() {\n      return fetch(`${this._url}users/me`, {\n        headers: this._headers,\n      }).then(this._getResponse);\n    }\n  \n    getInitialCards() {\n      return fetch(`${this._url}cards`, {\n        headers: this._headers,\n      }).then(this._getResponse);\n    }\n  \n    deleteCard(id) {\n      return fetch(`${this._url}cards/${id}`, {\n        headers: this._headers,\n        method: \"DELETE\",\n      }).then(this._getResponse);\n    }\n  \n    createCardData(data) {\n      return fetch(`${this._url}cards`, {\n        headers: this._headers,\n        method: \"POST\",\n        body: JSON.stringify({\n          name: data.inputNameCard,\n          link: data.inputLink,\n        }),\n      }).then(this._getResponse);\n    }\n  \n    changeProfile(data) {\n      return fetch(`${this._url}users/me`, {\n        headers: this._headers,\n        method: \"PATCH\",\n        body: JSON.stringify({\n          name: data.inputName,\n          about: data.inputInfo,\n        }),\n      }).then(this._getResponse);\n    }\n   \n    likeCard(id) {\n      return fetch(`${this._url}cards/${id}/likes`, {\n        headers: this._headers,\n        method: \"PUT\",\n      }).then(this._getResponse);\n    }\n  \n    deleteLikesCard(id) {\n      return fetch(`${this._url}cards/${id}/likes`, {\n        headers: this._headers,\n        method: \"DELETE\",\n      }).then(this._getResponse);\n    }\n  \n    changeAvatar(data) {\n      return fetch(`${this._url}users/me/avatar`, {\n        headers: this._headers,\n        method: \"PATCH\",\n        body: JSON.stringify({\n          avatar: data.inputLinkAvatar,\n        }),\n      }).then(this._getResponse);\n    }\n  }\n    const apiConfig = {\n      url: \"https://mesto.nomoreparties.co/v1/cohort-76/\",\n      headers: {\n        authorization: \"487361ea-3659-4f38-9ffe-1c80ddb5a2d6\",\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    export const newApi = new Api(apiConfig);\n\n  \n\n  export default Api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}